{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/cloudflare';\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData } from '@remix-run/react';\nimport stylesheet from \"~/tailwind.css\";\nimport { getUser } from 'app/utils/authentication/session.server';\nimport { AuthProvider } from 'app/components/authentication/AuthProvider';\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: stylesheet\n}];\nexport async function loader({\n  request,\n  context\n}) {\n  return json({\n    user: await getUser(request, context)\n  });\n}\nexport default function App() {\n  _s();\n  const userInfo = useLoaderData();\n  return <html lang=\"en\" className=\"h-full bg-gray-100\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap\" rel=\"stylesheet\" />\n\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <AuthProvider user={userInfo.user}>\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n        </AuthProvider>\n        <LiveReload />\n      </body>\n    </html>;\n}\n_s(App, \"p1viQfum446ygpFl5MVzTLOxDEc=\", false, function () {\n  return [useLoaderData];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,wBAAqB;;;;;;AAGrB,qBAAwB;AAmBhB;AAzCR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mBAAqB,EAAE;AAAA,EAChE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAc;AAChB;AAQO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AASc,SAAR,MAAuB;AAC5B,KAAG;AACH,QAAM,WAAW,cAAc;AAC/B,SAAO,mDAAC,UAAK,MAAK,MAAK,WAAU,sBAC7B;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MAEpE,mDAAC,UAAK,KAAI,cAAa,MAAK,kCAA5B;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MAC3D,mDAAC,UAAK,KAAI,cAAa,MAAK,+BAA5B;AAAA;AAAA;AAAA;AAAA,aAAwD;AAAA,MACxD,mDAAC,UAAK,MAAK,2GAA0G,KAAI,gBAAzH;AAAA;AAAA;AAAA;AAAA,aAAsI;AAAA,MAEtI,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SATT;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IACA,mDAAC,UAAK,WAAU,UACd;AAAA,yDAAC,gBAAa,MAAM,SAAS,MAC3B;AAAA,2DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,QACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,eAAmB;AAAA,QACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,eAAS;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SANd;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAnBG;AAAA;AAAA;AAAA;AAAA,SAoBL;AACJ;AACA,GAAG,KAAK,gCAAgC,OAAO,WAAY;AACzD,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
