{
  "version": 3,
  "sources": ["../../../app/routes/_authed.policy.transaction.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_authed.policy.transaction.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_authed.policy.transaction.tsx\");\n  import.meta.hot.lastModified = \"1708356365268.8962\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport PolicyConfiguration from 'app/components/policies/PolicyConfiguration';\nimport { requireUser } from 'app/utils/authentication/session.server';\nimport { listPolicyConfiguration } from 'app/utils/policies/policies.server';\nexport const loader = async ({\n  request,\n  context\n}) => {\n  const user = await requireUser(request, context);\n  const policies = await listPolicyConfiguration(user.token, 'transaction:transfer'); // TODO: drop the :transfer\n\n  return json({\n    items: policies,\n    count: policies.length\n  });\n};\nexport default function TransactionPolicyConfigurePage() {\n  _s();\n  const config = useLoaderData().items.reduce((all, item) => {\n    all.push({\n      ...item,\n      createdAt: new Date(item.createdAt)\n    });\n    return all;\n  }, []);\n  return <PolicyConfiguration configuration={config} kind=\"Transactions\" />;\n}\n_s(TransactionPolicyConfigurePage, \"UGd6Srho9ZIz3WBO/oX8v/JIOKQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = TransactionPolicyConfigurePage;\nvar _c;\n$RefreshReg$(_c, \"TransactionPolicyConfigurePage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,wBAAqB;AAGrB,qBAA4B;AAC5B,sBAAwC;AAsB/B;AA9CT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gDAAkD,EAAE;AAAA,EAC7F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2C;AAC3C,cAAY,IAAI,eAAe;AACjC;AAoBe,SAAR,iCAAkD;AACvD,KAAG;AACH,QAAM,SAAS,cAAc,EAAE,MAAM,OAAO,CAAC,KAAK,SAAS;AACzD,QAAI,KAAK;AAAA,MACP,GAAG;AAAA,MACH,WAAW,IAAI,KAAK,KAAK,SAAS;AAAA,IACpC,CAAC;AACD,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACL,SAAO,mDAAC,+BAAoB,eAAe,QAAQ,MAAK,kBAAjD;AAAA;AAAA;AAAA;AAAA,SAAgE;AACzE;AACA,GAAG,gCAAgC,gCAAgC,OAAO,WAAY;AACpF,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gCAAgC;AAEjD,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
