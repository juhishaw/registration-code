{
  "version": 3,
  "sources": ["../../../app/routes/_authed.policy._log.activity._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_authed.policy._log.activity._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_authed.policy._log.activity._index.tsx\");\n  import.meta.hot.lastModified = \"1708356365268.0476\";\n}\n// REMIX HMR END\n\nimport { Link, useNavigate } from '@remix-run/react';\nimport { Fragment, useContext, useState } from 'react';\nimport { classNames } from '~/utils/helpers';\nimport { BigDecimal } from '~/utils/BigDecimal';\nimport { TransferActivityContext } from 'app/routes/_authed.policy._log';\nexport const meta = () => {\n  return [{\n    title: \"Web3Firewall\"\n  }, {\n    name: \"description\",\n    content: \"AI Powered Compliance: Transact with Confidence\"\n  }];\n};\nconst getMostRecent = events => {\n  const now = new Date();\n  const oneDay = 1000 * 60 * 60 * 24;\n  const dateSummary = date => {\n    const today = new Date(now.toISOString().slice(0, 10) + 'T00:00:00.000Z');\n    const yesterday = new Date(new Date(now.getTime() - oneDay).toISOString().slice(0, 10) + 'T00:00:00.000Z');\n    if (date.getTime() >= today.getTime()) {\n      return 'Today';\n    } else if (date.getTime() >= yesterday.getTime()) {\n      return 'Yesterday';\n    }\n    return date.toDateString();\n  };\n  return events.sort((a, b) => new Date(b.datetime).getTime() - new Date(a.datetime).getTime()).reduce((all, item) => {\n    const date = dateSummary(new Date(item.datetime));\n    let match = all.findIndex(item => date === item.date);\n    if (match === -1) {\n      match = all.length;\n      all.push({\n        date,\n        dateTime: new Date(item.datetime).toISOString().slice(0, 10),\n        transactions: []\n      });\n    }\n    all[match].transactions.push({\n      id: item.id,\n      network: item.data.network,\n      to: item.data.to,\n      from: item.data.from,\n      value: item.data.value || '0',\n      gas: item.data.gasLimit || '0',\n      initiator: 'unknown',\n      status: item.status === 'Submitted' ? 'Approved' : item.status === 'Needs Approval' ? 'Needs Approval' : 'Denied',\n      approvals: !item.approvals ? [] : item.approvals.given.map(approval => ({\n        approver: approval.approver,\n        datetime: approval.datetime,\n        action: approval.decision === 'approve' ? 'Approve' : 'Deny'\n      }))\n    });\n    return all;\n  }, []);\n};\nexport default function PolicyActivityPage() {\n  _s();\n  const activity = useContext(TransferActivityContext);\n  const navigate = useNavigate();\n  const [filter, setFilter] = useState('');\n  const filterUpdate = e => {\n    setFilter(e.target.value);\n  };\n  const statuses = {\n    Approved: 'text-green-700 bg-green-50 ring-green-600/20',\n    Denied: 'text-red-600 bg-red-50 ring-red-500/10',\n    'Needs Approval': 'text-yellow-700 bg-yellow-50 ring-yellow-600/10'\n  };\n  const weiToEth = new BigDecimal('1000000000000000000');\n  const filteredActivity = activity.filter(entry => entry.data.from.toLowerCase().includes(filter.toLowerCase()));\n  return <div className=\"px-4 sm:px-6 lg:px-8\">\n      <div className=\"sm:flex sm:items-center\">\n        <div className=\"sm:flex-auto\">\n          <h1 className=\"text-base font-semibold leading-6 text-gray-900\">Activity Log</h1>\n        </div>\n      </div>\n      <div className=\"mt-2\">\n        <input onChange={filterUpdate} type=\"text\" name=\"search-filter\" id=\"search-filter\" className=\"block w-full rounded-full border-0 px-4 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" placeholder=\"Search for an event\" />\n      </div>\n      <div className=\"mt-6 overflow-hidden border-t border-gray-100\">\n        <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n          <div className=\"mx-auto max-w-2xl lg:mx-0 lg:max-w-none\">\n            <table className=\"w-full text-left\">\n              <thead className=\"sr-only\">\n                <tr>\n                  <th>Amount</th>\n                  <th className=\"hidden sm:table-cell\">Destination</th>\n                  <th>More details</th>\n                </tr>\n              </thead>\n              <tbody>\n                {getMostRecent(filteredActivity).map(day => <Fragment key={day.date}>\n                    <tr className=\"text-sm leading-6 text-gray-900\">\n                      <th scope=\"colgroup\" colSpan={3} className=\"relative isolate py-2 font-semibold\">\n                        <time dateTime={day.dateTime}>{day.date}</time>\n                        <div className=\"absolute inset-y-0 right-full -z-10 w-screen border-b border-gray-200 bg-gray-50\" />\n                        <div className=\"absolute inset-y-0 left-0 -z-10 w-screen border-b border-gray-200 bg-gray-50\" />\n                      </th>\n                    </tr>\n                    {day.transactions.map(transaction => <tr key={transaction.id}>\n                        <td className=\"relative py-5 pr-6\">\n                          <div className=\"flex gap-x-6\">\n                            <div className=\"flex-auto\">\n                              <div className=\"flex items-start gap-x-3\">\n                                <div className=\"text-sm font-medium leading-6 text-gray-900\">\n                                  {new BigDecimal(transaction.value).divide(weiToEth).toString()} {transaction.network}\n                                </div>\n                                <div className={classNames(statuses[transaction.status], 'rounded-md py-1 px-2 text-xs font-medium ring-1 ring-inset')}>\n                                  {transaction.status}\n                                </div>\n                              </div>\n                              {transaction.gas ? <div className=\"mt-1 text-xs leading-5 text-gray-500\">Gas: {transaction.gas} {transaction.network}</div> : null}\n                            </div>\n                          </div>\n                          <div className=\"absolute bottom-0 right-full h-px w-screen bg-gray-100\" />\n                          <div className=\"absolute bottom-0 left-0 h-px w-screen bg-gray-100\" />\n                        </td>\n                        <td className=\"hidden py-5 pr-6 sm:table-cell\">\n                          <div className=\"text-sm leading-6 text-gray-900\">{transaction.to}</div>\n                          <div className=\"mt-1 text-xs leading-5 text-gray-500\">{transaction.initiator} ({transaction.from})</div>\n                        </td>\n                        <td className=\"py-5 text-right\">\n                          <div className=\"flex justify-end\">\n                            <Link to={`${transaction.id}`} relative=\"path\" className=\"text-sm font-medium leading-6 text-indigo-600 hover:text-indigo-500\">\n                              View<span className=\"hidden sm:inline\"> transaction</span>\n                              <span className=\"sr-only\">\n                                , transaction #{transaction.id}, {transaction.to}\n                              </span>\n                            </Link>\n                          </div>\n                          <div className=\"mt-1 text-xs leading-5 text-gray-500\">\n                            {transaction.status !== 'Needs Approval' && transaction.approvals.length === 0 ? <>Auto-{transaction.status}</> : <>Approvers: <span className=\"text-gray-900\">{transaction.approvals.length}</span></>}\n                          </div>\n                        </td>\n                      </tr>)}\n                  </Fragment>)}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s(PolicyActivityPage, \"RibnagIKA3RUDZ8UeYTlQN6iAC4=\", false, function () {\n  return [useNavigate];\n});\n_c = PolicyActivityPage;\nvar _c;\n$RefreshReg$(_c, \"PolicyActivityPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "item"]
}
