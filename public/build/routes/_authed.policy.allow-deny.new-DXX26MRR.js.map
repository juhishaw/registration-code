{
  "version": 3,
  "sources": ["../../../app/routes/_authed.policy.allow-deny.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_authed.policy.allow-deny.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_authed.policy.allow-deny.new.tsx\");\n  import.meta.hot.lastModified = \"1708356365268.411\";\n}\n// REMIX HMR END\n\nimport { Fragment, useState } from 'react';\nimport { useActionData, useNavigate, useNavigation, useSubmit } from '@remix-run/react';\nimport { Dialog, Menu, Transition } from '@headlessui/react';\nimport { XMarkIcon } from '@heroicons/react/24/solid';\nimport { EllipsisVerticalIcon } from '@heroicons/react/20/solid';\nimport { json } from '@remix-run/cloudflare';\nimport { requireUser } from 'app/utils/authentication/session.server';\nimport { addToAllowDenyList } from 'app/utils/account/account.server';\nexport const action = async ({\n  request,\n  context\n}) => {\n  const user = await requireUser(request, context);\n  const formData = await request.formData();\n  const addresses = JSON.parse(formData.get('items')?.toString() || '[]');\n  const allowDenyList = addresses.reduce((all, addr) => {\n    if (addr.rule === 'Allow') {\n      all.allowList.push(addr.name);\n    } else {\n      all.denyList.push({\n        address: addr.name,\n        category: addr.category\n      });\n    }\n    return all;\n  }, {\n    allowList: [],\n    denyList: []\n  });\n  if (await addToAllowDenyList(user.token, allowDenyList)) {\n    return json({\n      success: true\n    });\n  }\n  return json({\n    error: {\n      message: 'Failed to save list.'\n    }\n  });\n};\nconst rules = {\n  Allow: 'text-green-700 bg-green-50 ring-green-600/20',\n  Deny: 'text-red-600 bg-red-50 ring-red-500/10'\n};\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\nexport default function AddAllowDenyAddresses() {\n  _s();\n  const [addresses, setAddresses] = useState([]);\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const submit = useSubmit();\n  const data = useActionData();\n  const [show, setShow] = useState(true);\n  if (data && data.success) {\n    if (navigation.state === 'idle' && show) {\n      navigate(-1);\n      setShow(false);\n    }\n  }\n  const importHandler = event => {\n    const fileList = event.target.files;\n    if (!fileList || fileList.length === 0) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const str = String(fileReader.result);\n      try {\n        const lines = str.split('\\n');\n        const originalAddresses = addresses.map(addr => ({\n          address: addr.name,\n          allow: addr.rule === 'Allow',\n          category: addr.category\n        }));\n        const newAddresses = lines.reduce((all, line) => {\n          let parts = [];\n          if (line.includes(',')) {\n            parts = line.split(',');\n          } else if (line.includes('\\t')) {\n            parts = line.split('\\t');\n          }\n          if (parts.length < 2 || all.find(addr => addr.address === parts[0])) {\n            return all;\n          }\n          if (parts.length === 2) {\n            all.push({\n              address: parts[0],\n              allow: parts[1] === 'allow',\n              category: 'None'\n            });\n          } else if (parts.length === 3) {\n            all.push({\n              address: parts[0],\n              allow: parts[1] === 'allow',\n              category: parts[2] === 'none' ? 'None' : parts[2] === 'fraud' ? 'Fraud' : parts[2] === 'laundering' ? 'Laundering' : 'Phishing'\n            });\n          }\n          return all;\n        }, originalAddresses);\n        setAddresses(newAddresses.map(address => {\n          return {\n            name: address.address,\n            rule: address.allow ? 'Allow' : 'Deny',\n            category: address.category,\n            href: '#',\n            id: address.address\n          };\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fileReader.readAsBinaryString(fileList[0]);\n  };\n  return <Transition.Root show={show} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-10\" onClose={() => navigate(-1)}>\n        <div className=\"fixed inset-0\" />\n\n        <div className=\"fixed inset-0 overflow-hidden\">\n          <div className=\"absolute inset-0 overflow-hidden\">\n            <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16\">\n              <Transition.Child as={Fragment} enter=\"transform transition ease-in-out duration-500 sm:duration-700\" enterFrom=\"translate-x-full\" enterTo=\"translate-x-0\" leave=\"transform transition ease-in-out duration-500 sm:duration-700\" leaveFrom=\"translate-x-0\" leaveTo=\"translate-x-full\">\n                <Dialog.Panel className=\"pointer-events-auto w-screen max-w-2xl\">\n                  <div className=\"flex h-full flex-col overflow-y-scroll bg-white shadow-xl\">\n                    <div className=\"flex-1\">\n                      {/* Header */}\n                      <div className=\"bg-gray-50 px-4 py-6 sm:px-6\">\n                        <div className=\"flex items-start justify-between space-x-3\">\n                          <div className=\"space-y-1\">\n                            <Dialog.Title className=\"text-base font-semibold leading-6 text-gray-900\">\n                              Configure Wallets\n                            </Dialog.Title>\n                            <p className=\"text-sm text-gray-500\">\n                              Add addresses manually or select a file to import many addresses at one time.\n                            </p>\n                          </div>\n                          <div className=\"flex h-7 items-center\">\n                            <button type=\"button\" className=\"relative text-gray-400 hover:text-gray-500\" onClick={() => navigate(-1)}>\n                              <span className=\"absolute -inset-2.5\" />\n                              <span className=\"sr-only\">Close panel</span>\n                              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Divider container */}\n                      <div className=\"space-y-6 py-6 sm:space-y-0 sm:divide-y sm:divide-gray-200 sm:py-0\">\n                        {/* Project name */}\n                        <div className=\"space-y-2 px-4\">\n                          <div className=\"flex items-center justify-center w-full\">\n                            <label htmlFor=\"dropzone-file\" className=\"relative block w-full rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n                              <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                                <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                                  <path vectorEffect=\"non-scaling-stroke\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\" />\n                                </svg>\n                                <p className=\"mt-2 block text-sm text-gray-900\"><span className=\"font-semibold\">Click to upload</span> or drag and drop</p>\n                                <p className=\"text-xs text-gray-500\">CSV or TSV</p>\n                                <p className=\"text-xs text-gray-500\"></p>\n                                <p className=\"text-xs text-gray-500\">{`Format: <address>,<allow or deny>,<fraud or phishing or laundering or none>`}</p>\n                              </div>\n                              <input id=\"dropzone-file\" accept=\".csv,.tsv\" type=\"file\" className=\"sr-only\" onChange={importHandler} />\n                            </label>\n                          </div> \n                          <div className=\"flex border-t border-gray-100 pt-6\">\n                            <button type=\"button\" className=\"text-sm font-semibold leading-6 text-indigo-600 hover:text-indigo-500\">\n                              <span aria-hidden=\"true\">+</span> Add another address\n                            </button>\n                          </div>\n                          <ul role=\"list\" className=\"divide-y divide-gray-100\">\n                            {addresses.map(address => <li key={address.id} className=\"flex items-center justify-between gap-x-6 py-5\">\n                                <div className=\"min-w-0\">\n                                  <div className=\"flex items-start gap-x-3\">\n                                    <p className=\"text-sm font-semibold leading-6 text-gray-900\">{address.name}</p>\n                                    <p className={classNames(rules[address.rule], 'rounded-md whitespace-nowrap mt-0.5 px-1.5 py-0.5 text-xs font-medium ring-1 ring-inset')}>\n                                      {address.rule}\n                                    </p>\n                                  </div>\n                                  <div className=\"mt-1 flex items-center gap-x-2 text-xs leading-5 text-gray-500\">\n                                    <p className=\"truncate\">{address.category}</p>\n                                  </div>\n                                </div>\n                                <div className=\"flex flex-none items-center gap-x-4\">\n                                  <Menu as=\"div\" className=\"relative flex-none\">\n                                    <Menu.Button className=\"-m-2.5 block p-2.5 text-gray-500 hover:text-gray-900\">\n                                      <span className=\"sr-only\">Open options</span>\n                                      <EllipsisVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                    </Menu.Button>\n                                    <Transition as={Fragment} enter=\"transition ease-out duration-100\" enterFrom=\"transform opacity-0 scale-95\" enterTo=\"transform opacity-100 scale-100\" leave=\"transition ease-in duration-75\" leaveFrom=\"transform opacity-100 scale-100\" leaveTo=\"transform opacity-0 scale-95\">\n                                      <Menu.Items className=\"absolute right-0 z-10 mt-2 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none\">\n                                        <Menu.Item>\n                                          {({\n                                        active\n                                      }) => <button type=\"button\" onClick={() => {}} className={classNames(active ? 'bg-gray-50' : '', 'block px-3 py-1 text-sm leading-6 text-gray-900')}>\n                                              Edit<span className=\"sr-only\">, {address.name}</span>\n                                            </button>}\n                                        </Menu.Item>\n                                        <Menu.Item>\n                                          {({\n                                        active\n                                      }) => <button type=\"button\" onClick={() => {\n                                        setAddresses(addresses.filter(addr => addr.id !== address.id));\n                                      }} className={classNames(active ? 'bg-gray-50' : '', 'block px-3 py-1 text-sm leading-6 text-gray-900')}>\n                                              Delete<span className=\"sr-only\">, {address.name}</span>\n                                            </button>}\n                                        </Menu.Item>\n                                      </Menu.Items>\n                                    </Transition>\n                                  </Menu>\n                                </div>\n                              </li>)}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Action buttons */}\n                    <div className=\"flex-shrink-0 border-t border-gray-200 px-4 py-5 sm:px-6\">\n                      <div className=\"flex justify-end space-x-3\">\n                        <button type=\"button\" className=\"rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\" onClick={() => navigate(-1)}>\n                          Cancel\n                        </button>\n                        <button type=\"submit\" onClick={() => submit({\n                        items: JSON.stringify(addresses)\n                      }, {\n                        method: 'post'\n                      })} className=\"inline-flex justify-center rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\" disabled={addresses.length === 0}>\n                          Add Wallets\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>;\n}\n_s(AddAllowDenyAddresses, \"10i09fRH+k5HyMbVHOsYBETVvO0=\", false, function () {\n  return [useNavigate, useNavigation, useSubmit, useActionData];\n});\n_c = AddAllowDenyAddresses;\nvar _c;\n$RefreshReg$(_c, \"AddAllowDenyAddresses\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
